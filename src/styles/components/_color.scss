.color {
	--point-color: var(--c-point-gray);
	--color-after-length: 1;
	--color-after-shift: 0;

	position: relative;

	&::before,
	&::after {
		content: '';
		position: absolute;
		left: 0;
		width: 1px;
	}

	&::before {
		top: 0;
		height: 100%;
		background-color: rgb(var(--point-color));
		box-shadow: 0 0 6px 0 rgb(var(--point-color));
	}

	&::after {
		top: calc(var(--color-after-shift) * 1%);
		height: calc(var(--color-after-length) * 1%);
		box-shadow: 0 0 20px 4px rgb(var(--point-color));
		animation: color-shift, color-shine, color-length;
		animation-duration: 32s, 7s, 20s;
		animation-timing-function: cubic-bezier(.4, 0, .2, 1);
		animation-iteration-count: infinite;
	}

	&--horizontal {
		&::before,
		&::after {
			height: 1px;
		}

		&::before {
			width: 100%;
		}

		&::after {
			top: 0;
			left: calc(var(--color-after-shift) * 1%);
			width: calc(var(--color-after-length) * 1%);
			animation-duration: 25s, 7s, 49s;
		}
	}

	@each $name, $val in map-get($colors, point) {
		&--#{$name} {
			--point-color: var(--c-point-#{$name});
		}
	}

	@keyframes color-shift {
		0%,
		75%,
		100% {
			--color-after-shift: 0;
		}

		25%,
		50% {
			--color-after-shift: calc(100 - var(--color-after-length));
		}
	}

	@keyframes color-shine {
		0%,
		100% {
			box-shadow: 0 0 10px 0 rgb(var(--point-color));
		}

		50% {
			box-shadow: 0 0 1px 0 rgb(var(--point-color));
		}
	}

	@keyframes color-length {
		0%,
		100% {
			--color-after-length: 1;
		}

		50% {
			--color-after-length: 100;
		}
	}
}

@property --color-after-length {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}

@property --color-after-shift {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}
